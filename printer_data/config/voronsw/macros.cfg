
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer. 
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Turn on fans
  #SET_FAN_SPEED FAN=controller_fan SPEED=0.50

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 1min"                # Displays info
    G4 P60000                                           # Waits 1 min for the bedtemp to stabilize
  {% endif %}

  # Go to purge bucket, heat to target temp, purge, cool to 150, wipe nozzle
  #clean_nozzle PURGE={target_extruder} CLEAN=150

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #LIGHTS_ON                       # Turn on lights
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1      # Starts adaptive bed mesh

  # Load Skew Correction Profile
  SKEW_PROFILE LOAD=Califlower
  
  # Go to purge bucket, heat to target temp, wipe nozzle
  #clean_nozzle CLEAN={target_extruder}

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  #G91                                              # Incremental positioning 
  #G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

    
    # Prime line
    VORON_PURGE
#    PRIME_LINE
    M117 Printing...

[gcode_macro HEATSOAK]
gcode:
    G4 P{params.DWELL}

[gcode_macro END_PRINT]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_NOZZLE_LEDS_OFF
    DISABLE_MOTORS

	BED_MESH_CLEAR
    SET_SKEW CLEAR=1
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_READY
    M117 VS.125

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z14.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X25 Y20 Z0.5 F5000.0 ;Move to start position
    G1 X95 Y20 Z0.5 F1500.0 E15 ;Draw the first line
#    G1 X4 Y200.0 Z0.3 F5000.0 ;Move to side a little
#    G1 X4 Y50 Z0.3 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Y30 Z5.0 F3000 ;Move Z Axis up
    G1 X22 Y20 Z0.3
 
#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#    G90
#    G0 Z15 F500
#    G28 X0 Y0
#    G0 X115 Y0 F5000
#    G28 Z0
#    G0 Z25 F500


[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE ADAPTIVE=1
    BED_MESH_PROFILE save=default
    G1 X0 Y0 Z10 F4000

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z20 F600 # move up 5 mm
    G90
    G1 X125 Y0 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
variable_extruder: 210
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}
    
# load filament
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
#    LOW_TEMP_CHECK
    G1 E100 F200  # length of bowden tube till cold-end (~420mm) 
    G1 E100 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament
    
# unload filament
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament 
#    LOW_TEMP_CHECK
    G91 # set relative
    G1 E1 F100 
    G92 E0.0
    G1 E-130 F200 # the E is the length of the bowden tube (420mm) + 100 mm. 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

# filament change 
#[gcode_macro M600]
#gcode:
#    M117 Filament Change
#    M118 Filament Change
#    SAVE_GCODE_STATE NAME=filament_change
#    PAUSE
#    LOW_TEMP_CHECK
#    G91 # relative
#    G1 E-1 F300 # retract 1
#    M125 # park
#    M702 # unload
#
#    M117 New filament
#    M118 New filament
#    COUNTDOWN TIME=25 MSG="Switch"
#    M701
#    COUNTDOWN TIME=10 MSG="Clean"
#    RESUME
#    M117 Resuming
#    M118 Resuming
#    RESTORE_GCODE_STATE NAME=filament_change
#    M117 Printing..
#    M118 Printing..

#filament change
[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z40
    G90
    G1 X50 Y0 F3000
    G91
    G1 E-100 F1000
    G4 P30000
    G92 E0.0
    G1 E50 F300 # prime
    G1 E-.4 F300
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro COUNTDOWN]
variable_parameter_MSG: "Time: "
variable_parameter_TIME: 10
gcode: 
    # countdown 
    {% for s in range(TIME|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {params.MSG} {s}s
        M118 {params.MSG} {s}s
    {% endfor %}
	
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set X = params.X|default(230)|int %}
    {% set Y = params.Y|default(230)|int %}
    {% set Z = params.Z|default(10)|int %}
    M104 S0
    M140 S0
    M141 S0
    M106 S0
    CLEAR_PAUSE
    RESET_SD
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set X = params.X|default(230)|int %}
    {% set Y = params.Y|default(230)|int %}
    {% set Z = params.Z|default(10)|int %}
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G91
    G1 E1.7 F2100
    G91
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    
[gcode_macro DISABLE_MOTORS]
gcode:
    M18

[idle_timeout]
gcode:
    TURN_OFF_HEATERS
    DISABLE_MOTORS
    SET_NOZZLE_LEDS_OFF

[gcode_macro Show_off]
gcode: 
    G4 P10000
    SET_NOZZLE_LEDS_ON
    G28
    Park_toolhead
    G4 P2000
    SET_NOZZLE_LEDS_OFF

[gcode_macro AUTO_BED_MESH]
gcode:
    PROBE_IN
    BED_MESH_CALIBRATE
    PROBE_OUT

[gcode_macro _servo_test_angle]
gcode:
	{% set ANGLE  = params.ANGLE|int %}
	
    SET_SERVO SERVO=klicky_servo ANGLE={ANGLE}
    G4 P250
    SET_SERVO SERVO=klicky_servo WIDTH=0.0






